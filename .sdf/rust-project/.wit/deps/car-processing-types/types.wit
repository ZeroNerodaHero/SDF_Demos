// CODE GENERATED BY sdf
// DO NOT EDIT

package examples:car-processing-types;

interface types {
  type bytes = list<u8>;

  record car {
    timestamp: string,
  }
  type count-by-location-item-value = u32;
  record count-by-location-item {
    key: string,
    value: count-by-location-item-value,
  }
  type count-by-location = list<count-by-location-item>;
  type count-high-item-value = u32;
  record count-high-item {
    key: string,
    value: count-high-item-value,
  }
  type count-high = list<count-high-item>;
  record status-location {
    error-count: u32,
    location: string,
  }
  record status-log {
    error: u32,
    error-id: u32,
    location: u32,
    reason: string,
  }
  type status-total = list<status-location>;
}

world car-processing-types {
    export types;
}